---
# Source: oauth2-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oauth2-proxy
    release: kibana-proxy
  name: kibana-proxy-oauth2-proxy
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: oauth2-proxy
    release: kibana-proxy
---
# Source: oauth2-proxy/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy
    release: kibana-proxy
  name: kibana-proxy-oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
      release: kibana-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
        release: "kibana-proxy"
    spec:
      containers:
      - name: oauth2-proxy
        image: "quay.io/pusher/oauth2_proxy:v3.1.0"
        imagePullPolicy: IfNotPresent
        args:
          - --cookie-expire=7h
          - --email-domain=*
          - --http-address=0.0.0.0:4180
          - --oidc-issuer-url=https://moj-cloud-platforms-dev.eu.auth0.com/
          - --provider=oidc
          - --skip-provider-button=true
          - --pass-basic-auth=false
          - --upstream=https://search-cloud-platform-live-7qrzc26xexgxtkt5qz72gt6cxa.eu-west-1.es.amazonaws.com
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name:  monitoring-oidc
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name:  monitoring-oidc
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name:  monitoring-oidc
              key: cookie-secret
        ports:
          - containerPort: 4180
            name: http
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /ping
            port: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        resources:
          {}
        volumeMounts:
      volumes:
      tolerations:
        []
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: oauth2-proxy
    release: kibana-proxy
  name: kibana-proxy-oauth2-proxy
  annotations:
spec:
  rules:
    - host: kibana.apps.cloud-platform-live-0.k8s.integration.dsd.io
      http:
        paths:
          - path: /
            backend:
              serviceName: kibana-proxy-oauth2-proxy
              servicePort: 80
