#!/usr/bin/env ruby

require File.join(".", File.dirname(__FILE__), "pipeline")
require 'yaml'

def main(cluster)
  log("green", "applying for cluster #{cluster}")

  set_kube_context(cluster)
  apply_cluster_level_resources(cluster)
  apply_namespaces(cluster)

  log("green", "Done.")
end

def apply_namespaces(cluster)
  Dir["namespaces/#{cluster}/*"].each do |namespace_dir|
    execute("git pull") # In case any PRs were merged since the pipeline started
    apply_namespace_dir(cluster, namespace_dir)
    create_gpg(namespace_dir)
  end
end
  
def create_gpg(namespace_dir)
  team_name = parse_team_name(namespace_dir)
  print team_name
  #execute("gpg create")
  #pass_to_secret(team_name)
end

def parse_team_name(namespace_dir)
  yaml = YAML.load(File.read("#{namespace_dir}/01-rbac.yaml"))
  team = yaml['subjects'][0].dig('name').split(':')[1]
  team.nil? && abort("team not found")
  return team
end

def pass_to_secret
  pass private key to k8s secret
end

main ENV.fetch("PIPELINE_CLUSTER")
